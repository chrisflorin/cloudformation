AWSTemplateFormatVersion: 2010-09-09
Description: ---
#Metadata:

Parameters:

  AmiId:
    Type: AWS::EC2::Image::Id

  InstanceType:
    Type: String

  KeyName:
    Default: none
    Type: String

  Stage:
    Type: String

  PublicSubnetIdList:
    Type: CommaDelimitedList

  VpcCidr:
    Type: String

  VpcId:
    Type: String

#Mappings:

Conditions:

  HasKeyName: !Not [ !Equals [ !Ref KeyName, none ] ]

Resources:

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MaxSize: 1
      MinSize: 1
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}
          PropagateAtLaunch: true
        - Key: Stage
          Value: !Ref Stage
          PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref PublicSubnetIdList

  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  IamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-associate-address
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AssociateAddress
                Resource:
                  - '*'
        - PolicyName: !Sub ${AWS::StackName}-iam-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:ListUsers
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - iam:ListSSHPublicKeys
                  - iam:GetSSHPublicKey
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:user/*'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref IamRole

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt IamInstanceProfile.Arn
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        KeyName: !If [ HasKeyName, !Ref KeyName, !Ref 'AWS::NoValue' ]
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            Groups:
              - !Ref SecurityGroup
        UserData:
          'Fn::Base64': !Sub |
            #!/bin/bash
            echo export EIP_ALLOCATION_ID="${ElasticIp}" >> /etc/profile
            git clone https://github.com/chrisflorin/cloudformation /opt/cloudformation
            find /opt/cloudformation/ -type f -iname "*.sh" -exec chmod +x {} \;
            cd /opt/cloudformation/sh
            ./common/apt-get.sh
            ./bastion/associate-address.sh

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${VpcId}-bastion-security-group
      SecurityGroupEgress:
        - CidrIp: !Ref VpcCidr
          IpProtocol: -1
        - CidrIp: '0.0.0.0/0'
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: '0.0.0.0/0'
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref VpcId

#Outputs:
