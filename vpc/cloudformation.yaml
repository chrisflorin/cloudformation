AWSTemplateFormatVersion: 2010-09-09
Description: ---
#Metadata:

Parameters:

  BastionAmiId:
    Default: none
    Type: String

  BastionInstanceType:
    Default: t3.nano
    Type: String

  CidrClassB:
    Type: String

  Domain:
    Default: none
    Type: String

  Name:
    Type: String

  Region:
    Type: String

  StackUrl:
    Type: String

  Stage:
    Default: dev
    Type: String

#Mappings:

Conditions:

  HasBastion: !Not [ !Equals [ !Ref BastionAmiId, none ] ]
  HasDomain: !Not [ !Equals [ !Ref Domain, none ] ]

Resources:

  BastionStack:
    Type: AWS::CloudFormation::Stack
    Condition: HasBastion
    Properties:
      Parameters:
        AmiId: !Ref BastionAmiId
        InstanceType: !Ref BastionInstanceType
        PublicSubnetIdList: !GetAtt VpcSubStack.Outputs.PublicSubnetIdList
        Stage: !Ref Stage
        VpcCidr: !GetAtt VpcSubStack.Outputs.CidrBlock
        VpcId: !GetAtt VpcSubStack.Outputs.VpcId
      TemplateURL: !Sub ${StackUrl}/vpc/bastion.yaml

  PrivateHostedZone:
    Type: AWS::CloudFormation::Stack
    Condition: HasDomain
    Properties:
      Parameters:
        Domain: !Sub internal.${Domain}
        VpcId: !GetAtt VpcSubStack.Outputs.VpcId
      TemplateURL: !Sub ${StackUrl}/vpc/hosted-zone.yaml

  PublicHostedZone:
    Type: AWS::CloudFormation::Stack
    Condition: HasDomain
    Properties:
      Parameters:
        Domain: !Ref Domain
      TemplateURL: !Sub ${StackUrl}/vpc/hosted-zone.yaml

  VpcSubStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CidrClassB: !Ref CidrClassB
        Name: !Ref Name
        Region: !Ref Region
        Stage: !Ref Stage
      TemplateURL: !Sub ${StackUrl}/vpc/vpc.yaml

#Outputs:
