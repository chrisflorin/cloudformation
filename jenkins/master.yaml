#AWSTemplateFormatVersion: 2010-09-09
#Description: ---
#Metadata:

Parameters:

  AmiId:
    Type: String

  InstanceType:
    Default: t3.micro
    Type: String

  LoadBalancerArn:
    Default: none
    Type: String

  PrivateSubnetIdList:
    Type: String

  PublicSubnetIdList:
    Default: ''
    Type: String

  Sequence:
    Default: 1
    Type: String

  Stage:
    Type: String

  StackUrl:
    Type: String

  SubnetA:
    Type: String

  SubnetB:
    Type: String

  VpcCidr:
    Type: String

  VpcId:
    Type: String

#Mappings:

Conditions:

  CreateLoadBalancer: !Equals [ !Ref LoadBalancerArn, none ]

Resources:

  LoadBalancer:
    Condition: CreateLoadBalancer
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: !Sub jenkins-master-${Sequence}-${Stage}-app-lb
      Scheme: internet-facing
      Subnets: !Split [ ',', !Ref PublicSubnetIdList ]
      Type: application

  JenkinsApplicationSubStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AmiId: !Ref AmiId
        ApplicationName: !Sub jenkins-master-${Sequence}
        CreateElasticFileSystem: true
        InstanceType: !Ref InstanceType
        LoadBalancerArn: !If [ CreateLoadBalancer, !Ref LoadBalancer, !Ref LoadBalancerArn ]
        PrivateSubnetIdList: !Ref PrivateSubnetIdList
        Stage: !Ref Stage
        SubnetA: !Ref SubnetA
        SubnetB: !Ref SubnetB
        VpcCidr: !Ref VpcCidr
        VpcId: !Ref VpcId
      TemplateURL: !Sub ${StackUrl}/ec2/application.yaml

#Outputs:
